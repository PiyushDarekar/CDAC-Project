package com.example.demo.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.exception.ResourceNotFoundException;
import com.example.demo.model.Employee;
import com.example.demo.repository.EmployeeRepository;

@CrossOrigin(origins = "http://localhost:3000")
@RestController
@RequestMapping("/api/v1/")
public class EmployeeController {
	@Autowired
	private EmployeeRepository employeeRepository;
	
	//Get all Employees
	@GetMapping("/employees")
	public List<Employee> geAlltEmployees(){
		return employeeRepository.findAll();
	}
	//Create employee rest api
	@PostMapping("/employees")
	public Employee createEmployee(@RequestBody Employee employee) {
		return employeeRepository.save(employee);
	}
	//Get employee by id rest api
	@GetMapping("/employees/{id}")
	public ResponseEntity<Employee> getEmployeeById(@PathVariable Long id) {
		Employee employee = employeeRepository.findById(id)
				.orElseThrow(()=>new ResourceNotFoundException("Employee not exist with id: "+id));
		return ResponseEntity.ok(employee); 
	}
	//Update employee rest api
//	@PutMapping("/employees/{id}")
//	public Employee updateEmployee(@RequestBody Employee employee, @PathVariable Long id) {
//		Employee emp = employeeRepository.findById(id)
//				.orElseThrow(()=>new ResourceNotFoundException("Employee not exist with id: "+id));
//		return employeeRepository.save(employee);
//	}
}
